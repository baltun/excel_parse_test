version: '3.5'
services:


####   NGINX    #########
  nginx:
    image: nginx:1.27.3
    restart: always
    container_name: ${PROJECT_NAME}_nginx
    environment:
      PROJECT_NAME: ${PROJECT_NAME}
      PHP_CONTAINER_NAME: ${PROJECT_NAME}_php
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/servers
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".conf"
    depends_on:
      - php
#    ports:
#       - "${FORWARD_NGINX_PORT}:80"
      # - "1443:443"
    volumes:
      - .:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:cached
      - ./docker/nginx/templates:/etc/nginx/templates:cached
      - ./docker/nginx/servers/:/etc/nginx/servers:cached
      - ./docker/nginx/sites-available/:/etc/nginx/sites-available:cached
      - ./docker/nginx/logs/nginx:/var/log/nginx:cached
      - ./docker/nginx/ssl:/ssl:cached
      - /etc/hosts:/etc/hosts
      #- /etc/letsencrypt/:/etc/letsencrypt
      - /etc/localtime:/etc/localtime:ro
#    user: "1000:1000"
#    user: "${USER_ID}:${GROUP_ID}"
    networks:
      - network_name

######   MYSQL #######
  mysql:
    image: mysql:5.7.22
    #command:
    #        - "--default-authentication-plugin=mysql_native_password"
    container_name: ${PROJECT_NAME}_mysql
    restart: unless-stopped
    volumes:
      - ./docker/mysql/db_data:/var/lib/mysql
      - ./docker/mysql/etc/mysql/:/etc/mysql/conf.d/
      - ./docker/mysql/var/log/mysql/:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#      MYSQL_MAX_ALLOWED_PACKET: 1024M
#      MYSQL_INNODB_BUFFER_POOL_SIZE: 1G
#      MYSQL_INNODB_LOG_FILE_SIZE: 256M
#      MYSQL_INNODB_LOG_BUFFER_SIZE: 256M
#    ports:
#      - ${FORWARD_MYSQL_PORT}:3306
    user: "${USER_ID}:${GROUP_ID}"
    networks:
      - network_name

####  POSTGRES #######
#  postgres:
#    container_name: ${PROJECT_NAME}_postgres
#    image: postgres:13
#    restart: always
#    volumes:
#      - ./docker/postgres_data:/var/lib/postgresql/data
#    environment:
#      #         POSTGRES_DB: keycloak
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: password
#    ports:
#      - ${FORWARD_POSTGRES_PORT}:5432
#    networks:
#      - network_name


  ##### PHP #############
  php:
    build: ./docker/php82
    container_name: ${PROJECT_NAME}_php
    restart: always
      #ports:
      #- "9000:9000"
      #expose:
    #- "9000"
    #- "99001"
    volumes:
      - .:/var/www
      - ./docker/php82/config/custom.php.ini:/usr/local/etc/php/conf.d/custom.php.ini
      - ./docker/php82/config/www.conf:/usr/local/etc/php-fpm.d/www.conf
      - ./docker/php82/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker/php82/xhprof/reports:/tmp/xhprof
#      - ./php82/xhprof/xhprof_html:/usr/local/lib/php/xhprof_html
#      - ./php82/xhprof/xhprof_html/logs:/usr/local/lib/php/xhprof_html/logs
    #      - ./composer/auth.json:/root/.composer/auth.json
      - ./docker/xhgui/config:/var/xhgui/config

    environment:
      PHP_IDE_CONFIG: "serverName=Docker"
      XDG_CONFIG_HOME: "/home/myuser"
      OSFONTDIR: "/home/myuser"
    working_dir: "/var/www"
    user: "${USER_ID}:${GROUP_ID}"
#    user: "root:root"
    networks:
      - network_name



########################### !! END OF SERVICES - NETWORKS !! #######################################

networks:
    network_name:
        #    driver: bridge
        #    ipam:
        #      driver: default
        #      config:
        #        - subnet: 192.168.200.0/28
        name: ${NETWORK_NAME_EXTERNAL:-no_external_network}
        external: true
        driver: bridge
